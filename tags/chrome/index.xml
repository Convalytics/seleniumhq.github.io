<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chrome on Selenium</title><link>https://www.selenium.dev/tags/chrome/</link><description>Recent content in Chrome on Selenium</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 19 Aug 2024 12:12:09 +0200</lastBuildDate><atom:link href="https://www.selenium.dev/tags/chrome/index.xml" rel="self" type="application/rss+xml"/><item><title>Two Chrome features you should disable</title><link>https://www.selenium.dev/blog/2024/chrome-browser-woes/</link><pubDate>Sun, 18 Aug 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/chrome-browser-woes/</guid><description>Search engine selection screen Starting with version 127 of Chrome, the browser now asks which search engine you would like to use, which is great for regular users.
But for automation, it does so every single time.
To bypass this, use the argument below when specifying the browser options.
--disable-search-engine-choice-screen Chrome wastes over 60MB of your bandwidth downloading language plugins The second feature is something that has been with Chrome for quite a while now.</description></item><item><title>What's new in Selenium Manager with Selenium 4.11.0</title><link>https://www.selenium.dev/blog/2023/whats-new-in-selenium-manager-with-selenium-4.11.0/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/whats-new-in-selenium-manager-with-selenium-4.11.0/</guid><description>As of version 4.6.0, all releases of Selenium (Java, JavaScript, Python, Ruby, and .Net) are shipped with Selenium Manager. Selenium Manager is a binary tool (implemented in Rust) that provides automated driver management for Selenium. Selenium Manager is still in beta, although it is becoming a relevant component of Selenium.
So far, the main feature of Selenium Manager is called automated driver management. I use the term management for this feature (and not just download) since this process is broader and implies different steps:</description></item><item><title>Dev and Beta Channel Browsers via Docker Selenium</title><link>https://www.selenium.dev/blog/2022/dev-and-beta-channel-browsers-via-docker-selenium/</link><pubDate>Tue, 23 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/dev-and-beta-channel-browsers-via-docker-selenium/</guid><description>The Docker Selenium browser Beta and Dev channel releases are now regularly published to Docker Hub and updated every two days. This enables testers and developers to test their applications on pre-release versions of Google Chrome, Mozilla Firefox, and Microsoft Edge before their official releases, using container tools, such as Docker. This empowers teams to stay ahead of the curve and catch potential showstoppers in their CI environment before those issues have an impact on their users.</description></item></channel></rss>